{"version":3,"sources":["Surface.tsx"],"names":["React","Animated","StyleSheet","shadow","withTheme","overlay","Surface","props","style","theme","rest","flattenedStyles","flatten","elevation","isDarkTheme","dark","colors","backgroundColor","surface","Component"],"mappings":"6jBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,CAAmBC,UAAnB,KAAiE,cAAjE,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,OAASC,SAAT,KAA0B,iBAA1B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,C,GAwDMC,CAAAA,O,oQACK,iBAC2B,KAAKC,KADhC,CACCC,KADD,aACCA,KADD,CACQC,KADR,aACQA,KADR,CACkBC,IADlB,yDAEP,GAAMC,CAAAA,eAAe,CAAGT,UAAU,CAACU,OAAX,CAAmBJ,KAAnB,GAA6B,EAArD,CAFO,0BAG8BG,eAH9B,CAGCE,SAHD,CAGCA,SAHD,gCAGa,CAHb,0BAIOC,CAAAA,WAJP,CAI+BL,KAJ/B,CAICM,IAJD,CAIoBC,MAJpB,CAI+BP,KAJ/B,CAIoBO,MAJpB,CAKP,MACE,qBAAC,QAAD,CAAU,IAAV,aACMN,IADN,EAEE,KAAK,CAAE,CACL,CACEO,eAAe,CAAEH,WAAW,CAAGT,OAAO,CAACQ,SAAD,CAAV,CAAwBG,MAAM,CAACE,OAD7D,CADK,CAILL,SAAS,EAAIV,MAAM,CAACU,SAAD,CAJd,CAKLL,KALK,CAFT,kDADF,CAYD,C,qBAlBmBR,KAAK,CAACmB,S,EAoB5B,cAAef,CAAAA,SAAS,CAACE,OAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\nimport shadow from '../styles/shadow';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\nimport overlay from '../styles/overlay';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * A overlay and/or shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-1.png\" />\n *   <img src=\"screenshots/surface-2.png\" />\n *   <img src=\"screenshots/surface-3.png\" />\n * </div>\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-dark-1.png\" />\n *   <img src=\"screenshots/surface-dark-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *     elevation: 4,\n *   },\n * });\n * ```\n */\nclass Surface extends React.Component<Props> {\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const flattenedStyles = StyleSheet.flatten(style) || {};\n    const { elevation = 4 }: ViewStyle = flattenedStyles;\n    const { dark: isDarkTheme, colors } = theme;\n    return (\n      <Animated.View\n        {...rest}\n        style={[\n          {\n            backgroundColor: isDarkTheme ? overlay(elevation) : colors.surface,\n          },\n          elevation && shadow(elevation),\n          style,\n        ]}\n      />\n    );\n  }\n}\nexport default withTheme(Surface);\n"]}